// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhuLieuToc.Repository;

#nullable disable

namespace PhuLieuToc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250919112706_as")]
    partial class @as
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhuLieuToc.Models.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("PhuLieuToc.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("PhuLieuToc.Models.DiaChiGiaoHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiCuThe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LaMacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("XaPhuong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("DiaChiGiaoHangs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GiaTriThuocTinh", b =>
                {
                    b.Property<int>("GiaTriThuocTinhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiaTriThuocTinhId"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenGiaTri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuocTinhId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("GiaTriThuocTinhId");

                    b.HasIndex("ThuocTinhId");

                    b.ToTable("GiaTriThuocTinhs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GioHang", b =>
                {
                    b.Property<int>("GioHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GioHangId"));

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.HasKey("GioHangId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GioHangChiTiet", b =>
                {
                    b.Property<int>("GioHangChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GioHangChiTietId"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GioHangId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamChiTietId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GioHangChiTietId");

                    b.HasIndex("GioHangId");

                    b.HasIndex("SanPhamChiTietId");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("PhuLieuToc.Models.HoaDon", b =>
                {
                    b.Property<Guid>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiGiaoHang")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmailKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("HoaDonId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("PhuLieuToc.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("HoaDonChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GiaTriThuocTinhLucMua")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HinhAnhLucMua")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiThuocTinhLucMua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SanPhamChiTietId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPhamLucMua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ThuongHieuLucMua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HoaDonChiTietId");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("SanPhamChiTietId");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("PhuLieuToc.Models.LichSuTrangThaiHoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ThoiGianThayDoi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThaiCu")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiMoi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.ToTable("LichSuTrangThaiHoaDons");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPham", b =>
                {
                    b.Property<int>("SanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanPhamId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("SanPhamId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPhamChiTiet", b =>
                {
                    b.Property<int>("SanPhamChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanPhamChiTietId"));

                    b.Property<string>("Anh")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("SanPhamChiTietId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("SanPhamChiTiets");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPhamChiTietThuocTinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GiaTriThuocTinhId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamChiTietId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiaTriThuocTinhId");

                    b.HasIndex("SanPhamChiTietId");

                    b.ToTable("SanPhamChiTietThuocTinhs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetOtp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("ResetOtpAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResetOtpExpiryUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TaiKhoanId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SoDienThoai")
                        .IsUnique()
                        .HasFilter("[SoDienThoai] IS NOT NULL");

                    b.HasIndex("TenDangNhap")
                        .IsUnique();

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("PhuLieuToc.Models.ThuocTinh", b =>
                {
                    b.Property<int>("ThuocTinhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThuocTinhId"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenThuocTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ThuocTinhId");

                    b.ToTable("ThuocTinhs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.CategoryModel", b =>
                {
                    b.HasOne("PhuLieuToc.Models.CategoryModel", "ParentCategory")
                        .WithMany("Children")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("PhuLieuToc.Models.DiaChiGiaoHang", b =>
                {
                    b.HasOne("PhuLieuToc.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("DiaChiGiaoHangs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GiaTriThuocTinh", b =>
                {
                    b.HasOne("PhuLieuToc.Models.ThuocTinh", "ThuocTinh")
                        .WithMany("GiaTriThuocTinhs")
                        .HasForeignKey("ThuocTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GioHang", b =>
                {
                    b.HasOne("PhuLieuToc.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("GioHangs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("PhuLieuToc.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhuLieuToc.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("SanPhamChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("PhuLieuToc.Models.HoaDon", b =>
                {
                    b.HasOne("PhuLieuToc.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("HoaDons")
                        .HasForeignKey("TaiKhoanId");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("PhuLieuToc.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("PhuLieuToc.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhuLieuToc.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("SanPhamChiTietId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("PhuLieuToc.Models.LichSuTrangThaiHoaDon", b =>
                {
                    b.HasOne("PhuLieuToc.Models.HoaDon", "HoaDon")
                        .WithMany("LichSuTrangThaiHoaDons")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPham", b =>
                {
                    b.HasOne("PhuLieuToc.Models.BrandModel", "Brand")
                        .WithMany("SanPhams")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhuLieuToc.Models.CategoryModel", "Category")
                        .WithMany("SanPhams")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("PhuLieuToc.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPhamChiTietThuocTinh", b =>
                {
                    b.HasOne("PhuLieuToc.Models.GiaTriThuocTinh", "GiaTriThuocTinh")
                        .WithMany("SanPhamChiTietThuocTinhs")
                        .HasForeignKey("GiaTriThuocTinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhuLieuToc.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("SanPhamChiTietThuocTinhs")
                        .HasForeignKey("SanPhamChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiaTriThuocTinh");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("PhuLieuToc.Models.BrandModel", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("PhuLieuToc.Models.CategoryModel", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GiaTriThuocTinh", b =>
                {
                    b.Navigation("SanPhamChiTietThuocTinhs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("PhuLieuToc.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("LichSuTrangThaiHoaDons");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("PhuLieuToc.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamChiTietThuocTinhs");
                });

            modelBuilder.Entity("PhuLieuToc.Models.TaiKhoan", b =>
                {
                    b.Navigation("DiaChiGiaoHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PhuLieuToc.Models.ThuocTinh", b =>
                {
                    b.Navigation("GiaTriThuocTinhs");
                });
#pragma warning restore 612, 618
        }
    }
}
