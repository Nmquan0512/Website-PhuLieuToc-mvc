@model IEnumerable<SanPhamChiTiet>

<div class="col-sm-3">

	@Html.Partial("_sidebar")
</div>
	<!-- Sản phẩm -->
	<div class="col-sm-9 padding-right">
		<div class="features_items row g-4">
			<h2 class="title text-center">Sản phẩm</h2>
			@{ var parents = Model
				.GroupBy(v => v.SanPhamId)
				.Select(g => new { SanPham = g.First().SanPham, FirstVariant = g.OrderBy(v=>v.SanPhamChiTietId).First() })
				.ToList(); }
			@foreach (var item in parents)
			{
				<div class="col-12 col-sm-6 col-md-4 d-flex">
					<div class="product-image-wrapper w-100">
						<div class="single-products">
							<div class="productinfo text-center">
								<img src="@Url.Content(!string.IsNullOrEmpty(item.FirstVariant?.Anh) ? item.FirstVariant.Anh : "/images/home/logo.jpg")" style="width:260px;height:260px;object-fit:cover;" />
								<h2 class="price-text" data-product-id="@item.SanPham.SanPhamId">@(item.FirstVariant?.Gia.ToString("N0") ?? "0")</h2>
								<p style="font-size: 15px; font-weight: bold;">@item.SanPham.TenSanPham</p>
								<button class="btn btn-default add-to-cart" onclick="openVariantOrAdd(@item.SanPham.SanPhamId, @(item.FirstVariant?.SanPhamChiTietId ?? 0))"><i class="fa fa-shopping-cart"></i>Thêm vào giỏ</button>
							</div>
						</div>
					</div>
				</div>
			}
		</div><!-- /features_items -->
	</div>
	<script>
		$(document).ready(function () {
			$('.price-text').each(function () {
				const pid = $(this).data('product-id');
				fetch('@Url.Action("GetVariants","Product")' + `?productId=${pid}`)
					.then(r => r.json())
					.then(d => {
						if (!d.success) return;
						if (d.variants && d.variants.length > 1) {
							if (d.minPrice === d.maxPrice) $(this).text(Number(d.minPrice).toLocaleString());
							else $(this).text(`${Number(d.minPrice).toLocaleString()} - ${Number(d.maxPrice).toLocaleString()}`);
						}
					});
			});
		});

        function addToCart(sanPhamChiTietId, selectedThuocTinhText = '', soLuong = 1) {
			fetch('@Url.Action("AddToCart", "Cart")', {
				method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `sanPhamChiTietId=${sanPhamChiTietId}&soLuong=${encodeURIComponent(soLuong)}&selectedThuocTinh=${encodeURIComponent(selectedThuocTinhText)}`
			}).then(r=>r.json()).then(d=>{ if (d.success){ if (window.showToast) showToast(d.message,'success'); if (window.updateCartCount) updateCartCount(); } else alert(d.message||'Có lỗi');});
		}

		async function openVariantOrAdd(productId, defaultVariantId) {
			try {
				const res = await fetch('@Url.Action("GetVariants","Product")' + `?productId=${productId}`);
				const data = await res.json();
				if (!data.success) return addToCart(defaultVariantId);
				if (!data.variants || data.variants.length === 0) return addToCart(defaultVariantId);
				if (data.variants.length === 1) {
					const onlyId = data.variants[0]?.id || defaultVariantId;
					return addToCart(onlyId, data.variants[0]?.thuocTinh?.map(t=>`${t.loai}: ${t.giaTri}`).join(', '));
				}
                const variants = data.variants;
                const options = variants.map(v => { const a=(v.thuocTinh&&v.thuocTinh[0])||{loai:'Biến thể',giaTri:v.ten||v.id}; return {id:v.id, gia:v.gia, soLuong: v.soLuongTon ?? v.soLuong ?? 0, anh: v.anh || '', label:`${a.loai}: ${a.giaTri}`}; });
                const html = `
<div class="modal fade variant-modal" id="variantModal" tabindex="-1" aria-hidden="true">
 <div class="modal-dialog modal-dialog-centered"><div class="modal-content">
  <div class="modal-header"><h5 class="modal-title">Chọn biến thể</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
  <div class="modal-body">
    <div class="variant-options" data-type="single">
      ${options.map(o=>`<div class='variant-chip' data-id='${o.id}' data-label='${o.label}' data-gia='${o.gia}' data-stock='${o.soLuong}' data-img='${o.anh}'><div style='font-size:14px;font-weight:600'>${o.label}</div></div>`).join('')}
    </div>
    <div class="d-flex align-items-center gap-3 mt-3">
      <img id="variantImgPreview" src="" alt="variant" style="width:64px;height:64px;object-fit:cover;border-radius:8px;display:none;"/>
      <div id="variantStock" class="text-muted small"></div>
    </div>
    <div class="mt-3 d-flex align-items-center justify-content-between">
      <div class="qty-control"><button type="button" id="qtyMinus">-</button><input type="number" id="qtyInput" value="1" min="1" /><button type="button" id="qtyPlus">+</button></div>
      <div id="pricePreview" style="font-weight:700;color:var(--primary-dark)"></div>
    </div>
  </div>
  <div class="modal-footer d-flex justify-content-between align-items-center"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button><button type="button" class="btn btn-primary" id="variantAddBtn">Thêm vào giỏ</button></div>
 </div></div>
</div>`;
                const container = document.createElement('div'); container.style.position='relative'; container.style.zIndex='1056'; container.innerHTML=html; document.body.appendChild(container);
                const modalEl = container.querySelector('#variantModal'); const modal = new bootstrap.Modal(modalEl,{backdrop:true,focus:true}); let selectedId=null; const pricePreview = container.querySelector('#pricePreview'); const qtyInput = container.querySelector('#qtyInput'); const imgPreview = container.querySelector('#variantImgPreview'); const stockText = container.querySelector('#variantStock');
                const firstChip = container.querySelector('.variant-options .variant-chip'); if(firstChip) firstChip.classList.add('active');
                function refresh(){ const act=container.querySelector('.variant-options .variant-chip.active'); selectedId= act? Number(act.getAttribute('data-id')):null; const gia= act? Number(act.getAttribute('data-gia')):null; pricePreview.textContent = gia!=null ? (Number(gia).toLocaleString()+ ' đ') : ''; const img = act? act.getAttribute('data-img') : ''; const stock = act? Number(act.getAttribute('data-stock')) : null; if (img) { imgPreview.src = img; imgPreview.style.display = 'block'; } else { imgPreview.style.display = 'none'; } stockText.textContent = stock != null ? `Còn: ${stock}` : ''; }
                container.querySelectorAll('.variant-options .variant-chip').forEach(c=>{ c.addEventListener('click',()=>{ const p=c.closest('.variant-options'); p.querySelectorAll('.variant-chip').forEach(x=>x.classList.remove('active')); c.classList.add('active'); refresh();});});
                refresh();
                container.querySelector('#variantAddBtn').addEventListener('click', ()=>{ refresh(); if(!selectedId){ if(window.showToast) showToast('Vui lòng chọn biến thể','secondary'); return;} const act=container.querySelector('.variant-options .variant-chip.active'); const label = act? act.getAttribute('data-label') : ''; const amount = Math.max(1, parseInt(qtyInput.value||'1', 10)); addToCart(selectedId, label, amount); modal.hide(); container.remove(); });
				modalEl.addEventListener('hidden.bs.modal',()=>container.remove()); modal.show();
			} catch(e){ addToCart(defaultVariantId); }
		}
	</script>
