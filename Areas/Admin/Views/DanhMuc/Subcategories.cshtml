@using PhuLieuToc.Models
@model CategoryModel
@{
    ViewData["Title"] = "Danh mục con";
    Layout = "_Layout";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-folder-tree me-2"></i>Danh mục con: @Model.TenDanhMuc
            </h1>
            <p class="text-muted">Quản lý các danh mục con của danh mục "@Model.TenDanhMuc"</p>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-success" id="addSubcategoryBtn">
                <i class="fas fa-plus me-2"></i>Thêm danh mục con
            </button>
            <a href="/Admin/DanhMuc" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-2"></i>Quay lại
            </a>
        </div>
    </div>

    <!-- Thông tin danh mục cha -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-folder me-2"></i>Thông tin danh mục cha
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="info-item">
                        <label class="info-label">Tên danh mục:</label>
                        <span class="info-value">@Model.TenDanhMuc</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="info-item">
                        <label class="info-label">Slug:</label>
                        <span class="info-value">@Model.Slug</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="info-item">
                        <label class="info-label">Mô tả:</label>
                        <span class="info-value">@(string.IsNullOrEmpty(Model.MoTa) ? "Không có mô tả" : Model.MoTa)</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="info-item">
                        <label class="info-label">Trạng thái:</label>
                        <span class="info-value">
                            @if (Model.TrangThai == 1)
                            {
                                <span class="badge bg-success">Đang hoạt động</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Không hoạt động</span>
                            }
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form thêm danh mục con (ẩn mặc định) -->
    <div class="card shadow mb-4" id="addSubcategoryForm" style="display: none;">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-success">
                <i class="fas fa-plus me-2"></i>Thêm danh mục con mới
            </h6>
        </div>
        <div class="card-body">
            <form id="subcategoryForm">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="subcategoryName" class="form-label">Tên danh mục con <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="subcategoryName" placeholder="Nhập tên danh mục con..." required>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="subcategorySlug" class="form-label">Slug</label>
                            <input type="text" class="form-control" id="subcategorySlug" placeholder="Tự động tạo..." readonly>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="subcategoryDescription" class="form-label">Mô tả</label>
                    <textarea class="form-control" id="subcategoryDescription" rows="3" placeholder="Mô tả ngắn gọn về danh mục con..."></textarea>
                </div>
                <div class="form-group">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="subcategoryActive" checked>
                        <label class="form-check-label" for="subcategoryActive">
                            Danh mục con đang hoạt động
                        </label>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save me-2"></i>Lưu danh mục con
                    </button>
                    <button type="button" class="btn btn-secondary" id="cancelAddBtn">
                        <i class="fas fa-times me-2"></i>Hủy
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Danh sách danh mục con -->
    <div class="card shadow">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-list me-2"></i>Danh sách danh mục con
            </h6>
            <div class="d-flex gap-2">
                <div class="input-group" style="width: 300px;">
                    <input type="text" class="form-control" placeholder="Tìm kiếm danh mục con..." id="searchInput">
                    <button class="btn btn-outline-secondary" type="button">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                <select class="form-select" style="width: 150px;" id="filterStatus">
                    <option value="">Tất cả trạng thái</option>
                    <option value="active">Đang hoạt động</option>
                    <option value="inactive">Không hoạt động</option>
                </select>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Children != null && Model.Children.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="subcategoriesTable">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 50px;">
                                    <input type="checkbox" class="form-check-input" id="selectAll">
                                </th>
                                <th>Tên danh mục con</th>
                                <th>Slug</th>
                                <th>Mô tả</th>
                                <th>Trạng thái</th>
                                <th style="width: 150px;">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var subcategory in Model.Children)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" class="form-check-input subcategory-checkbox" value="@subcategory.Id">
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-folder text-info me-2"></i>
                                            <strong>@subcategory.TenDanhMuc</strong>
                                        </div>
                                    </td>
                                    <td>
                                        <code class="text-muted">@subcategory.Slug</code>
                                    </td>
                                    <td>
                                        @if (string.IsNullOrEmpty(subcategory.MoTa))
                                        {
                                            <span class="text-muted">Không có mô tả</span>
                                        }
                                        else
                                        {
                                            @subcategory.MoTa
                                        }
                                    </td>
                                    <td>
                                        @if (subcategory.TrangThai == 1)
                                        {
                                            <span class="badge bg-success">Đang hoạt động</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Không hoạt động</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="/Admin/DanhMuc/EditSubcategory/@subcategory.Id" 
                                               class="btn btn-sm btn-outline-primary" 
                                               title="Chỉnh sửa">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-danger delete-subcategory-btn" 
                                                    title="Xóa" data-id="@subcategory.Id">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div class="text-muted">
                        Hiển thị 1-@Model.Children.Count của @Model.Children.Count danh mục con
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-sm btn-outline-danger" id="deleteSelectedBtn" style="display: none;">
                            <i class="fas fa-trash me-1"></i>Xóa đã chọn
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Chưa có danh mục con nào</h5>
                    <p class="text-muted">Nhấn "Thêm danh mục con" để bắt đầu tạo danh mục con cho danh mục "@Model.TenDanhMuc"</p>
                    <button class="btn btn-success" id="addFirstSubcategoryBtn">
                        <i class="fas fa-plus me-2"></i>Thêm danh mục con đầu tiên
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Scripts -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Xử lý hiển thị/ẩn form thêm danh mục con
    const addSubcategoryBtn = document.getElementById('addSubcategoryBtn');
    const addFirstSubcategoryBtn = document.getElementById('addFirstSubcategoryBtn');
    const addSubcategoryForm = document.getElementById('addSubcategoryForm');
    const cancelAddBtn = document.getElementById('cancelAddBtn');

    function showAddForm() {
        addSubcategoryForm.style.display = 'block';
        addSubcategoryBtn.innerHTML = '<i class="fas fa-minus me-2"></i>Ẩn form thêm';
        addSubcategoryBtn.classList.remove('btn-success');
        addSubcategoryBtn.classList.add('btn-secondary');
    }

    function hideAddForm() {
        addSubcategoryForm.style.display = 'none';
        addSubcategoryBtn.innerHTML = '<i class="fas fa-plus me-2"></i>Thêm danh mục con';
        addSubcategoryBtn.classList.remove('btn-secondary');
        addSubcategoryBtn.classList.add('btn-success');
    }

    addSubcategoryBtn.addEventListener('click', function() {
        if (addSubcategoryForm.style.display === 'none') {
            showAddForm();
        } else {
            hideAddForm();
        }
    });

    if (addFirstSubcategoryBtn) {
        addFirstSubcategoryBtn.addEventListener('click', showAddForm);
    }

    cancelAddBtn.addEventListener('click', hideAddForm);

    // Xử lý checkbox "Chọn tất cả"
    const selectAllCheckbox = document.getElementById('selectAll');
    const subcategoryCheckboxes = document.querySelectorAll('.subcategory-checkbox');
    const deleteSelectedBtn = document.getElementById('deleteSelectedBtn');
    
    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            subcategoryCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateDeleteSelectedButton();
        });
    }
    
    subcategoryCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateDeleteSelectedButton);
    });

    function updateDeleteSelectedButton() {
        const checkedCount = document.querySelectorAll('.subcategory-checkbox:checked').length;
        if (checkedCount > 0) {
            deleteSelectedBtn.style.display = 'inline-block';
            deleteSelectedBtn.innerHTML = `<i class="fas fa-trash me-1"></i>Xóa đã chọn (${checkedCount})`;
        } else {
            deleteSelectedBtn.style.display = 'none';
        }
    }
    
    // Xử lý tìm kiếm
    const searchInput = document.getElementById('searchInput');
    const filterStatus = document.getElementById('filterStatus');
    
    function filterSubcategories() {
        const searchTerm = searchInput.value.toLowerCase();
        const statusFilter = filterStatus.value;
        
        const rows = document.querySelectorAll('#subcategoriesTable tbody tr');
        
        rows.forEach(row => {
            const subcategoryName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            const status = row.querySelector('td:nth-child(5)').textContent;
            
            const matchesSearch = subcategoryName.includes(searchTerm);
            const matchesStatus = !statusFilter || 
                (statusFilter === 'active' && status.includes('Đang hoạt động')) ||
                (statusFilter === 'inactive' && status.includes('Không hoạt động'));
            
            row.style.display = matchesSearch && matchesStatus ? '' : 'none';
        });
    }
    
    if (searchInput) {
        searchInput.addEventListener('input', filterSubcategories);
    }
    if (filterStatus) {
        filterStatus.addEventListener('change', filterSubcategories);
    }
    
    // Xử lý xóa danh mục con
    const deleteButtons = document.querySelectorAll('.delete-subcategory-btn');
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const subcategoryId = this.getAttribute('data-id');
            const subcategoryName = this.closest('tr').querySelector('td:nth-child(2) strong').textContent;
            
            if (confirm(`Bạn có chắc chắn muốn xóa danh mục con "${subcategoryName}"?`)) {
                deleteSubcategory(subcategoryId);
            }
        });
    });
    
    // Hàm xóa danh mục con (gọi API)
    async function deleteSubcategory(subcategoryId) {
        try {
            const response = await fetch(`/Admin/DanhMuc/DeleteSubcategory/${subcategoryId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const result = await response.json();

            if (result.success) {
                alert(result.message);
                // Reload trang để cập nhật danh sách
                location.reload();
            } else {
                alert('Lỗi: ' + result.message);
            }
        } catch (error) {
            console.error('Lỗi khi xóa danh mục con:', error);
            alert('Có lỗi xảy ra khi xóa danh mục con. Vui lòng thử lại.');
        }
    }
    
    // Xử lý form thêm danh mục con
    const subcategoryForm = document.getElementById('subcategoryForm');
    const subcategoryNameInput = document.getElementById('subcategoryName');
    const subcategorySlugInput = document.getElementById('subcategorySlug');
    
    // Tự động tạo slug từ tên danh mục con
    subcategoryNameInput.addEventListener('input', function() {
        const slug = this.value
            .toLowerCase()
            .replace(/đ/g, 'd')
            .replace(/[^a-z0-9\s-]/g, '')
            .replace(/\s+/g, '-')
            .replace(/-+/g, '-')
            .trim('-');
        subcategorySlugInput.value = slug;
    });
    
    // Xử lý submit form
    subcategoryForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const subcategoryData = {
            name: subcategoryNameInput.value,
            slug: subcategorySlugInput.value,
            description: document.getElementById('subcategoryDescription').value,
            active: document.getElementById('subcategoryActive').checked,
            parentCategoryId: @Model.Id
        };
        
        // Validate dữ liệu
        if (!subcategoryData.name.trim()) {
            alert('Vui lòng nhập tên danh mục con!');
            return;
        }
        
        // Hiển thị dữ liệu sẽ được lưu (tạm thời)
        console.log('Dữ liệu danh mục con sẽ được lưu:', subcategoryData);
        
        // Gọi API để lưu dữ liệu
        saveSubcategory(subcategoryData);
    });
    
    // Hàm lưu danh mục con (gọi API)
    async function saveSubcategory(subcategoryData) {
        try {
            // Lấy antiforgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
            
            const response = await fetch('/Admin/DanhMuc/CreateSubcategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(subcategoryData)
            });

            const result = await response.json();

            if (result.success) {
                // Hiển thị thông báo thành công
                alert(result.message);
                
                // Reset form
                subcategoryForm.reset();
                
                // Ẩn form
                hideAddForm();
                
                // Reload trang để hiển thị dữ liệu mới
                location.reload();
            } else {
                alert('Lỗi: ' + result.message);
            }
        } catch (error) {
            console.error('Lỗi khi lưu danh mục con:', error);
            alert('Có lỗi xảy ra khi lưu danh mục con. Vui lòng thử lại.');
        }
    }
});
</script>

<style>
/* CSS cho trang danh mục con */
.info-item {
    margin-bottom: 1rem;
}

.info-label {
    font-weight: 600;
    color: #5a5c69;
    display: block;
    margin-bottom: 0.25rem;
}

.info-value {
    color: #858796;
    font-size: 1rem;
}

.form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-start;
    padding-top: 1rem;
    border-top: 1px solid #e3e6f0;
}

.btn {
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    border-radius: 0.35rem;
    transition: all 0.15s ease-in-out;
}

.btn-success {
    background-color: #1cc88a;
    border-color: #1cc88a;
}

.btn-success:hover {
    background-color: #17a673;
    border-color: #169b6b;
}

.btn-secondary {
    background-color: #858796;
    border-color: #858796;
}

.btn-secondary:hover {
    background-color: #717384;
    border-color: #6b7280;
}

.btn-primary {
    background-color: #4e73df;
    border-color: #4e73df;
}

.btn-primary:hover {
    background-color: #2e59d9;
    border-color: #2653d4;
}

.btn-outline-danger {
    color: #e74a3b;
    border-color: #e74a3b;
}

.btn-outline-danger:hover {
    background-color: #e74a3b;
    border-color: #e74a3b;
}

.btn-outline-primary {
    color: #4e73df;
    border-color: #4e73df;
}

.btn-outline-primary:hover {
    background-color: #4e73df;
    border-color: #4e73df;
}

.badge {
    font-size: 0.75rem;
    padding: 0.5rem 0.75rem;
}

.bg-success {
    background-color: #1cc88a !important;
}

.bg-danger {
    background-color: #e74a3b !important;
}

code {
    background-color: #f8f9fc;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
}

/* Responsive */
@@media (max-width: 768px) {
    .form-actions {
        flex-direction: column;
    }
    
    .card-header .d-flex {
        flex-direction: column;
        gap: 1rem;
    }
    
    .input-group {
        width: 100% !important;
    }
    
    .form-select {
        width: 100% !important;
    }
}
</style>
