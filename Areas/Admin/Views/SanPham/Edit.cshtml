@model PhuLieuToc.Models.ViewModels.ProductCreateEditViewModel

<div class="container-fluid px-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm" style="background: linear-gradient(135deg, #99b18f 0%, #7a9470 100%);">
                <div class="card-body p-4">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h4 class="text-white mb-1 fw-bold">
                                <i class="fas fa-edit me-2"></i>Chỉnh sửa sản phẩm
                            </h4>
                            <p class="text-white-50 mb-0">Cập nhật thông tin sản phẩm</p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <a asp-area="Admin" asp-controller="SanPham" asp-action="Index" class="btn btn-light btn-sm">
                                <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Section -->
    <div class="card border-0 shadow-sm">
        <div class="card-body p-4">
            <form asp-area="Admin" asp-controller="SanPham" asp-action="Edit" asp-route-id="@Model.SanPhamId" method="post" enctype="multipart/form-data">
                <!-- Basic Information -->
                <div class="mb-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle me-3 d-flex align-items-center justify-content-center"
                             style="width: 35px; height: 35px; background: linear-gradient(135deg, #99b18f, #7a9470); color: white;">
                            <i class="fas fa-info-circle"></i>
                        </div>
                        <h5 class="mb-0 fw-semibold text-primary">Thông tin cơ bản</h5>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label fw-medium">Tên sản phẩm</label>
                            <input asp-for="TenSanPham" class="form-control" placeholder="Nhập tên sản phẩm..." />
                            <span asp-validation-for="TenSanPham" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-medium">Slug</label>
                            <input asp-for="Slug" id="slugInput" class="form-control" placeholder="URL thân thiện..." />
                            <span asp-validation-for="Slug" class="text-danger small"></span>
                        </div>
                        <div class="col-12">
                            <label class="form-label fw-medium">Mô tả</label>
                            <textarea asp-for="MoTa" class="form-control" rows="4" placeholder="Mô tả chi tiết về sản phẩm..."></textarea>
                        </div>
                    </div>
                </div>

                <!-- Category & Brand -->
                <div class="mb-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="rounded-circle me-3 d-flex align-items-center justify-content-center"
                             style="width: 35px; height: 35px; background: linear-gradient(135deg, #99b18f, #7a9470); color: white;">
                            <i class="fas fa-tags"></i>
                        </div>
                        <h5 class="mb-0 fw-semibold text-primary">Phân loại sản phẩm</h5>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label fw-medium">Danh mục</label>
                            <select asp-for="CategoryId" class="form-select" asp-items="@(new SelectList(Model.Categories, nameof(CategoryModel.Id), nameof(CategoryModel.TenDanhMuc), Model.CategoryId))">
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <span asp-validation-for="CategoryId" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-medium">Thương hiệu</label>
                            <select asp-for="BrandId" class="form-select" asp-items="@(new SelectList(Model.Brands, nameof(BrandModel.Id), nameof(BrandModel.TenThuongHieu), Model.BrandId))">
                                <option value="">-- Chọn thương hiệu --</option>
                            </select>
                            <span asp-validation-for="BrandId" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-medium">Trạng thái</label>
                            <div class="form-check form-switch mt-2 p-3 rounded" style="background: #f8f9fa;">
                                <input type="hidden" asp-for="TrangThai" />
                                <input class="form-check-input" type="checkbox" role="switch" id="TrangThaiToggleEdit" @(Model.TrangThai == 1 ? "checked" : "")>
                                <label class="form-check-label fw-medium" for="TrangThaiToggleEdit">
                                    <i class="fas fa-eye me-1"></i>Hiển thị sản phẩm
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <hr class="my-4 border-2" style="border-color: #e9ecef;">

                <!-- Variants Section -->
                <div id="variants-section" class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="d-flex align-items-center">
                            <div class="rounded-circle me-3 d-flex align-items-center justify-content-center"
                                 style="width: 35px; height: 35px; background: linear-gradient(135deg, #99b18f, #7a9470); color: white;">
                                <i class="fas fa-layer-group"></i>
                            </div>
                            <h5 class="mb-0 fw-semibold text-primary">Biến thể sản phẩm</h5>
                        </div>
                        <button type="button" class="btn btn-sm rounded-pill px-3" id="btnAddVariant"
                                style="background: linear-gradient(135deg, #99b18f, #7a9470); color: white; border: none;">
                            <i class="fas fa-plus me-1"></i>Thêm sản phẩm
                        </button>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle" id="variants-table" style="border-radius: 8px; overflow: hidden;">
                            <thead style="background: #f8f9fa;">
                                <tr>
                                    <th class="fw-semibold">Thuộc tính</th>
                                    <th style="width:140px" class="fw-semibold">Giá</th>
                                    <th style="width:140px" class="fw-semibold">Số lượng</th>
                                    <th style="width:220px" class="fw-semibold">Ảnh (URL)</th>
                                    <th style="width:120px" class="fw-semibold text-center">Trạng thái</th>
                                    <th style="width:60px" class="fw-semibold text-center"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="d-flex gap-2 pt-3 border-top">
                    <button type="submit" class="btn btn-success rounded-pill px-4">
                        <i class="fas fa-save me-1"></i>Cập nhật sản phẩm
                    </button>
                    <a asp-area="Admin" asp-controller="SanPham" asp-action="Index" class="btn btn-secondary rounded-pill px-4">
                        <i class="fas fa-times me-1"></i>Hủy bỏ
                    </a>
                </div>

                <div id="variants-hidden-inputs"></div>
            </form>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="d-none position-fixed top-0 start-0 w-100 h-100"
     style="background: rgba(255,255,255,0.8); z-index: 9999;">
    <div class="d-flex align-items-center justify-content-center h-100">
        <div class="text-center">
            <div class="spinner-border" style="color: #99b18f;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="mt-2 text-muted">Đang cập nhật sản phẩm...</div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="~/Views/Shared/_ValidationScriptsPartial.cshtml" />
    <script>
        const api = {
            getThuocTinhs: '@Url.Action("GetThuocTinhs", "SanPham", new { area = "Admin" })',
            getGiaTriByThuocTinh: (id) => '@Url.Action("GetGiaTriByThuocTinh", "SanPham", new { area = "Admin" })' + `?thuocTinhId=${id}`,
            getGiaTriByIds: '@Url.Action("GetGiaTriByIds", "SanPham", new { area = "Admin" })'
        };
        const variantsTableBody = document.querySelector('#variants-table tbody');
        const variantsHidden = document.getElementById('variants-hidden-inputs');
        const btnAddVariant = document.getElementById('btnAddVariant');

        let allThuocTinhs = [];
        async function loadThuocTinhs() {
            const res = await fetch(api.getThuocTinhs);
            allThuocTinhs = await res.json();
        }

        function createAttrItem(selectedTypeId, selectedValueId, singleMode = false) {
            const div = document.createElement('div');
            div.className = 'd-flex gap-2 align-items-center mb-2 attr-item';
            div.innerHTML = `
                        <select class="form-select form-select-sm attr-type" style="max-width:220px"><option value="">-- Thuộc tính --</option></select>
                        <select class="form-select form-select-sm attr-value" style="max-width:220px"><option value="">-- Giá trị --</option></select>
                        <button type="button" class="btn btn-sm btn-outline-danger attr-remove" ${singleMode ? 'style="display:none"' : ''}>X</button>`;

            const typeSel = div.querySelector('.attr-type');
            const valueSel = div.querySelector('.attr-value');
            allThuocTinhs.forEach(t => { const o = document.createElement('option'); o.value = t.id; o.textContent = t.name; if (String(selectedTypeId) === String(t.id)) o.selected = true; typeSel.appendChild(o); });

            async function populateValues(typeId) {
                valueSel.innerHTML = '<option value="">-- Giá trị --</option>';
                if (!typeId) return;
                const res = await fetch(api.getGiaTriByThuocTinh(typeId));
                const vals = await res.json();
                vals.forEach(v => { const o = document.createElement('option'); o.value = v.id; o.textContent = v.name; if (String(selectedValueId) === String(v.id)) o.selected = true; valueSel.appendChild(o); });
            }

            typeSel.addEventListener('change', async (e) => { await populateValues(e.target.value); });
            if (selectedTypeId) { populateValues(selectedTypeId); }

            div.querySelector('.attr-remove').addEventListener('click', () => div.remove());
            return div;
        }

        function addVariantRow(preset, valueToTypeMap) {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                        <td>
                            <div class="attr-list"></div>
                        </td>
                        <td><input type="number" min="0" step="0.01" class="form-control v-gia" value="${preset?.gia ?? preset?.Gia ?? 0}" /></td>
                        <td><input type="number" min="0" step="1" class="form-control v-qty" value="${preset?.soLuongTon ?? preset?.SoLuongTon ?? 0}" /></td>
                        <td>
                            <input type="file" class="form-control v-anh-file" accept="image/*" />
                            ${preset?.Anh ? `<div class="small text-muted mt-1">Ảnh hiện tại:</div><img src="${preset.Anh}" style="width:60px;height:60px;object-fit:cover;border-radius:6px;margin-top:4px;">` : ''}
                            <input type="hidden" class="v-anh-old" value="${preset?.Anh ?? ''}" />
                        </td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input v-status" type="checkbox" role="switch" ${(preset?.trangThai ?? preset?.TrangThai ?? 1) == 1 ? 'checked' : ''}>
                            </div>
                        </td>
                        <td><button type="button" class="btn btn-sm btn-outline-danger v-remove">X</button></td>`;

            variantsTableBody.appendChild(tr);

            const list = tr.querySelector('.attr-list');
            tr.querySelector('.v-remove').addEventListener('click', () => tr.remove());

            if (preset && (preset.giaTriThuocTinhIds || preset.GiaTriThuocTinhIds)) {
                const ids = (preset.giaTriThuocTinhIds || preset.GiaTriThuocTinhIds).map(Number);
                const firstId = ids[0];
                const typeId = valueToTypeMap ? valueToTypeMap[firstId] : undefined;
                list.appendChild(createAttrItem(typeId, firstId, true));
            } else {
                list.appendChild(createAttrItem(undefined, undefined, true));
            }
        }

        btnAddVariant.addEventListener('click', () => addVariantRow());

        (async function init() {
            await loadThuocTinhs();
            const variants = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Variants));
            if (variants && variants.length) {
                // Build map valueId -> typeId so we can preselect attribute type
                const allIds = [...new Set(variants.flatMap(v => (v.giaTriThuocTinhIds || v.GiaTriThuocTinhIds || [])))];
                let valueToTypeMap = {};
                if (allIds.length) {
                    const res = await fetch(api.getGiaTriByIds, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(allIds) });
                    const data = await res.json();
                    data.forEach(x => valueToTypeMap[x.id] = x.thuocTinhId);
                }
                variants.forEach(v => addVariantRow(v, valueToTypeMap));
            } else {
                addVariantRow();
            }
        })();

        document.querySelector('form').addEventListener('submit', (e) => {
            // sync product status from toggle to hidden input
            const toggleEdit = document.getElementById('TrangThaiToggleEdit');
            const hiddenTrangThai = document.querySelector('input[name="TrangThai"]');
            if (toggleEdit && hiddenTrangThai) hiddenTrangThai.value = toggleEdit.checked ? '1' : '0';

            const rows = [...variantsTableBody.querySelectorAll('tr')];
            variantsHidden.querySelectorAll('.bundle').forEach(x => x.remove());
            rows.forEach((tr, i) => {
                const gia = tr.querySelector('.v-gia').value || '0';
                const qty = tr.querySelector('.v-qty').value || '0';
                const statusChecked = tr.querySelector('.v-status')?.checked;
                const ids = [...tr.querySelectorAll('.attr-item')]
                    .map(item => item.querySelector('.attr-value').value)
                    .filter(x => x);
                const wrap = document.createElement('div');
                wrap.className = 'bundle';
                const add = (name, val) => { const input = document.createElement('input'); input.type = 'hidden'; input.name = name; input.value = val; wrap.appendChild(input); };
                add(`Variants[${i}].Gia`, gia);
                add(`Variants[${i}].SoLuongTon`, qty);
                const fileInput = tr.querySelector('.v-anh-file');
                const oldInput = tr.querySelector('.v-anh-old');
                if (fileInput && fileInput.files && fileInput.files[0]) {
                    fileInput.name = `Variants[${i}].AnhFile`;
                } else if (oldInput && oldInput.value) {
                    add(`Variants[${i}].Anh`, oldInput.value);
                }
                add(`Variants[${i}].TrangThai`, statusChecked ? '1' : '0');
                ids.forEach((id, k) => add(`Variants[${i}].GiaTriThuocTinhIds[${k}]`, id));
                variantsHidden.appendChild(wrap);
            });
        });
    </script>
}


